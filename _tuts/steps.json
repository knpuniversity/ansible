{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "inventory-add-localhost-to-the-hosts-ini",
            "name": "Inventory: Add localhost to the hosts.ini",
            "description": null
        },
        {
            "id": "inventory-specify-connection-type-for-localhost",
            "name": "Inventory: Specify connection type for localhost",
            "description": null
        },
        {
            "id": "inventory-add-localhost-to-group",
            "name": "Inventory: Add localhost to group",
            "description": null
        },
        {
            "id": "inventory-show-second-local-ip",
            "name": "Inventory: Show second local ip",
            "description": null
        },
        {
            "id": "inventory-remove-duplicate-local-ip",
            "name": "Inventory: Remove duplicate local ip",
            "description": null
        },
        {
            "id": "vagrant-init-vagrantfile-based-on-ubuntu-image",
            "name": "Vagrant: Init Vagrantfile based on Ubuntu image",
            "description": null
        },
        {
            "id": "vagrant-use-private-network-ip-in-hosts-ini",
            "name": "Vagrant: Use private network IP in hosts.ini",
            "description": null
        },
        {
            "id": "vagrant-specify-ssh-user-and-password-in-hosts",
            "name": "Vagrant: Specify SSH user and password in hosts",
            "description": null
        },
        {
            "id": "playbook-add-task-to-ping-all-hosts",
            "name": "Playbook: Add task to ping all hosts",
            "description": null
        },
        {
            "id": "playbook-execute-play-on-vb-only",
            "name": "Playbook: Execute play on vb only",
            "description": null
        },
        {
            "id": "playbook-install-cowsay",
            "name": "Playbook: Install cowsay",
            "description": null
        },
        {
            "id": "playbook-use-become",
            "name": "Playbook: Use become",
            "description": null
        },
        {
            "id": "playbook-update-cache-and-upgrade-packages-with-apt",
            "name": "Playbook: Update cache and upgrade packages with APT",
            "description": null
        },
        {
            "id": "playbook-install-aptitude",
            "name": "Playbook: Install aptitude",
            "description": null
        },
        {
            "id": "playbook-add-task-to-install-git",
            "name": "Playbook: Add task to install Git",
            "description": null
        },
        {
            "id": "playbook-pass-state-latest-option",
            "name": "Playbook: Pass state=latest option",
            "description": null
        },
        {
            "id": "playbook-add-task-to-install-php-cli",
            "name": "Playbook: Add task to install PHP CLI",
            "description": null
        },
        {
            "id": "playbook-add-ppa-repository-for-php-7",
            "name": "Playbook: Add PPA repository for PHP 7",
            "description": null
        },
        {
            "id": "playbook-install-php-7-0-instead-of-default-5-5",
            "name": "Playbook: Install PHP 7.0 instead of default 5.5",
            "description": null
        },
        {
            "id": "playbook-add-task-to-install-nginx-and-expose-80-port",
            "name": "Playbook: Add task to install Nginx and expose 80 port",
            "description": null
        },
        {
            "id": "playbook-add-task-to-install-mysql",
            "name": "Playbook: Add task to install MySQL",
            "description": null
        },
        {
            "id": "playbook-install-symfony-related-php-extensions",
            "name": "Playbook: Install Symfony related PHP extensions",
            "description": null
        },
        {
            "id": "playbook-setup-timezone-for-cli-and-fpm",
            "name": "Playbook: Setup timezone for CLI and FPM",
            "description": null
        },
        {
            "id": "playbook-create-project-dir",
            "name": "Playbook: Create project dir",
            "description": null
        },
        {
            "id": "variables-use-dynamic-ansible-ssh-user",
            "name": "Variables: Use dynamic Ansible SSH user",
            "description": null
        },
        {
            "id": "variables-clone-checkout-git-repo",
            "name": "Variables: Clone\/checkout Git repo",
            "description": null
        },
        {
            "id": "variables-replace-root-dir-with-variable",
            "name": "Variables: Replace root dir with variable",
            "description": null
        },
        {
            "id": "variables-install-composer",
            "name": "Variables: Install Composer",
            "description": null
        },
        {
            "id": "variables-install-composer-deps",
            "name": "Variables: Install Composer deps",
            "description": null
        },
        {
            "id": "variables-install-dev-dependencies",
            "name": "Variables: Install dev dependencies",
            "description": null
        },
        {
            "id": "variables-install-missing-extensions",
            "name": "Variables: Install missing extensions",
            "description": null
        },
        {
            "id": "templates-create-nginx-symfony-template",
            "name": "Templates: Create Nginx Symfony template",
            "description": null
        },
        {
            "id": "templates-configure-nginx-project",
            "name": "Templates: Configure Nginx project",
            "description": null
        },
        {
            "id": "handlers-notify-restart-nginx-and-fpm",
            "name": "Handlers: Notify restart Nginx and FPM",
            "description": null
        },
        {
            "id": "fix-cache-and-logs-permissions",
            "name": "Fix cache and logs permissions",
            "description": null
        },
        {
            "id": "use-project-repo-url",
            "name": "Use project repo URL",
            "description": null
        },
        {
            "id": "database-create-execute-migrations-and-load-fixtures",
            "name": "Database: Create, execute migrations and load fixtures",
            "description": null
        },
        {
            "id": "add-tags-permissions",
            "name": "Add tags: permissions",
            "description": null
        },
        {
            "id": "add-tags-deploy",
            "name": "Add tags: deploy",
            "description": null
        },
        {
            "id": "suppress-changes-status-for-permissions-task",
            "name": "Suppress changes status for permissions task",
            "description": null
        },
        {
            "id": "register-variable-with-command-result-output-and-debug-it",
            "name": "Register variable with command result output and debug it",
            "description": null
        },
        {
            "id": "rename-suppress-changes-status-based-on-command-output",
            "name": "Rename Suppress changes status based on command output",
            "description": null
        },
        {
            "id": "clear-prod-cache",
            "name": "Clear prod cache",
            "description": null
        },
        {
            "id": "prompt-request-app-environment-from-user",
            "name": "Prompt: Request app environment from user",
            "description": null
        },
        {
            "id": "prompt-add-pre-tesk-to-lowercase-symfony-environment",
            "name": "Prompt: Add pre-tesk to lowercase symfony environment",
            "description": null
        },
        {
            "id": "prompt-remove-debug-statement",
            "name": "Prompt: Remove debug statement",
            "description": null
        },
        {
            "id": "prompt-use-symfony-environment-in-console-commands",
            "name": "Prompt: Use Symfony environment in console commands",
            "description": null
        },
        {
            "id": "when-stat-for-composer-file",
            "name": "When: stat for composer file",
            "description": null
        },
        {
            "id": "when-only-install-composer-when-needed",
            "name": "When: Only install Composer when needed",
            "description": null
        },
        {
            "id": "when-upgrade-composer-task",
            "name": "When: Upgrade Composer task",
            "description": null
        },
        {
            "id": "when-adding-changed-when-to-upgrade",
            "name": "When: Adding changed_when to upgrade",
            "description": null
        },
        {
            "id": "when-register-clone-variable",
            "name": "When: Register clone variable",
            "description": null
        },
        {
            "id": "when-set-fact-when-code-changed",
            "name": "When: set_fact & when code_changed",
            "description": null
        },
        {
            "id": "roles-move-symfony-bootstrap-tasks-to-separate-file",
            "name": "Roles: Move Symfony bootstrap tasks to separate file",
            "description": null
        },
        {
            "id": "roles-move-nginx-installation-to-the-separate-role",
            "name": "Roles: Move Nginx installation to the separate role",
            "description": null
        },
        {
            "id": "roles-move-cache-updating-and-package-upgrading-to-the-pre-tasks",
            "name": "Roles: Move cache updating and package upgrading to the pre_tasks",
            "description": null
        },
        {
            "id": "roles-install-redis-role",
            "name": "Roles: Install Redis role",
            "description": null
        },
        {
            "id": "vault-refactor-variables-into-file",
            "name": "Vault: Refactor variables into file",
            "description": null
        },
        {
            "id": "vault-add-parameters-yml-using-normal-var",
            "name": "Vault: Add parameters.yml using normal var",
            "description": null
        },
        {
            "id": "vault-create-and-load-vault-yml",
            "name": "Vault: Create and load vault.yml",
            "description": null
        },
        {
            "id": "vault-store-loggly-token-in-vault",
            "name": "Vault: Store Loggly token in vault",
            "description": null
        },
        {
            "id": "vagrant-provision-add-ansible-provisioner",
            "name": "Vagrant provision: Add Ansible provisioner",
            "description": null
        },
        {
            "id": "aws-deploy-app-to-the-ec2-instance",
            "name": "AWS: Deploy app to the EC2 instance",
            "description": null
        },
        {
            "id": "aws-override-default-server-name-with-ec2-public-dns",
            "name": "AWS: Override default server name with EC2 public DNS",
            "description": null
        },
        {
            "id": "aws-create-ec2-instance-with-ansible",
            "name": "AWS: Create EC2 instance with Ansible",
            "description": null
        },
        {
            "id": "upgrade-vb-box-to-ubuntu-16-04",
            "name": "Upgrade VB box to Ubuntu 16.04",
            "description": null
        },
        {
            "id": "update-main-playbook-to-do-host-provision-only",
            "name": "Update main playbook to do host provision only",
            "description": null
        }
    ],
    "sha": "8d89384c8a7561b846571cad5128602708f54b90"
}